diff -Nur webalizer-2.01-10.orig/README.IPv6 webalizer-2.01-10/README.IPv6
--- webalizer-2.01-10.orig/README.IPv6	Thu Jan  1 01:00:00 1970
+++ webalizer-2.01-10/README.IPv6	Sun May  5 14:38:12 2002
@@ -0,0 +1,2 @@
+IPv6 port by Arkadiusz Mi¶kiewicz <misiek@pld.ORG.PL>
+for PLD Linux, Sun Sep 2 2001
diff -Nur webalizer-2.01-10.orig/dns_resolv.c webalizer-2.01-10/dns_resolv.c
--- webalizer-2.01-10.orig/dns_resolv.c	Tue Apr 16 22:46:20 2002
+++ webalizer-2.01-10/dns_resolv.c	Sun May  5 14:47:20 2002
@@ -61,6 +61,9 @@
 #include <sys/types.h>
 #endif
 
+/* ensure getaddrinfo/getnameinfo */
+#include <netdb.h>
+
 /* some systems need this */
 #ifdef HAVE_MATH_H
 #include <math.h>
@@ -266,9 +269,16 @@
       strcpy(tmp_buf, buffer);            /* save buffer in case of error */
       if(parse_record(buffer))            /* parse the record             */
       {
-         if((log_rec.addr.s_addr = inet_addr(log_rec.hostname)) != INADDR_NONE)
+	 struct addrinfo hints, *ares;
+	 memset(&hints, 0, sizeof(hints));
+	 hints.ai_family = AF_UNSPEC;
+	 hints.ai_socktype = SOCK_STREAM;
+	 hints.ai_flags = AI_NUMERICHOST;
+	 if (0 == getaddrinfo(log_rec.hostname, "0", &hints, &ares))
          {
             DBT q, r;
+	    memcpy(&log_rec.addr, ares->ai_addr, ares->ai_addrlen);
+	    freeaddrinfo(ares);
             q.data = log_rec.hostname;
             q.size = strlen(log_rec.hostname);
 		
@@ -414,12 +424,10 @@
          {
             int size;
 
-            struct hostent *res_ent;
-
             close(child[i].inpipe[0]);
             close(child[i].outpipe[1]);
 
-            /* get struct in_addr here */
+            /* get struct sockaddr_storage here */
             while((size = read(child[i].outpipe[0], child_buf, MAXHOST)))
             {
                if(size < 0)
@@ -429,37 +437,40 @@
                }
                else
                {
-                  if(debug_mode)
+		  char hbuf[NI_MAXHOST];
+
+		  if(debug_mode)
                   printf("Child got work: %lx(%d)\n",
-                          *((unsigned long *)child_buf), size);
+                          *(unsigned long *)((struct sockaddr*)child_buf)->sa_data, size);
 
-                  if((res_ent = gethostbyaddr(child_buf, size, AF_INET)))
+                  if(0 == getnameinfo((struct sockaddr*)child_buf, sizeof(struct sockaddr_storage),
+				      hbuf, sizeof(hbuf), NULL, 0, NI_NAMEREQD))
                   {
                      /* must be at least 4 chars */
-                     if (strlen(res_ent->h_name)>3)
+                     if (strlen(hbuf)>3)
                      {
                         if(debug_mode)
-                           printf("Child got %s for %lx(%d), %d bytes\n",
-                                   res_ent->h_name,
-                                   *((unsigned long *)child_buf),
-                                   size,strlen(res_ent->h_name));
+                           printf("Child got %s for %x(%d), %d bytes\n",
+                                   hbuf,
+                                   *(unsigned long *)((struct sockaddr *)child_buf)->sa_data,
+                                   size,strlen(hbuf));
 
                         /* If long hostname, take max domain name part */
-                        if ((size = strlen(res_ent->h_name)) > MAXHOST-2)
-                           strcpy(child_buf,(res_ent->h_name+(size-MAXHOST+1)));
-                        else strcpy(child_buf, res_ent->h_name);
+                        if ((size = strlen(hbuf)) > MAXHOST-2)
+                           strcpy(child_buf,(hbuf+(size-MAXHOST+1)));
+                        else strcpy(child_buf, hbuf);
                         size = strlen(child_buf);
                      }
                      else
                      {
                         if (debug_mode)
-                           printf("gethostbyaddr returned bad h_name!\n");
+                           printf("getnameinfor returned bad hbuf!\n");
                      }
                   }
                   else
                   {
                      if(debug_mode)
-                        printf("gethostbyaddr returned NULL! (%d)\n",h_errno);
+                        printf("getnameinfo didn't return any usable information!\n");
                   }
 
                   if (write(child[i].inpipe[1], child_buf, size) == -1)
@@ -538,8 +549,8 @@
 
                if(trav)  /* something to resolve */
                {
-                  if (write(child[i].outpipe[1], &(trav->addr.s_addr),
-                     sizeof(trav->addr.s_addr)) != -1)
+                  if (write(child[i].outpipe[1], &trav->addr,
+                     sizeof(trav->addr)) != -1)
                   {
                      /* We will watch this child */
                      child[i].cur    = trav;
@@ -547,10 +558,9 @@
                      max_fd = MAX(max_fd, child[i].inpipe[0]);
 
                      if(debug_mode)
-                        printf("Giving %s (%lx) to Child %d for resolving\n",
+                        printf("Giving %s (%x) to Child %d for resolving\n",
                                 child[i].cur->string,
-                                (unsigned long)child[i].cur->addr.s_addr, i);
-
+			       *(unsigned long *)((struct sockaddr *)&child[i].cur->addr)->sa_data, i);
                      trav = trav->llist;
                   }
                   else  /* write error */
@@ -640,8 +650,8 @@
                      default:
                      {
                         dns_buf[size] = '\0';
-                        if(memcmp(dns_buf, &(child[i].cur->addr.s_addr),
-                                    sizeof(child[i].cur->addr.s_addr)))
+                        if(memcmp(dns_buf, &(child[i].cur->addr),
+                                    sizeof(child[i].cur->addr)))
                         {
                            if(debug_mode)
                               printf("Got a result (%d): %s -> %s\n",
diff -Nur webalizer-2.01-10.orig/hashtab.c webalizer-2.01-10/hashtab.c
--- webalizer-2.01-10.orig/hashtab.c	Fri Jun 15 10:34:24 2001
+++ webalizer-2.01-10/hashtab.c	Sun May  5 14:38:12 2002
@@ -976,7 +976,7 @@
 /* PUT_DNODE - insert/update dns host node   */
 /*********************************************/
 
-int put_dnode(char *str, struct in_addr *addr, DNODEPTR *htab)
+int put_dnode(char *str, struct sockaddr_storage *addr, DNODEPTR *htab)
 {
    DNODEPTR cptr,nptr;
 
@@ -988,8 +988,8 @@
       /* not hashed */
       if ( (nptr=new_dnode(str)) != NULL)
       {
-         if (addr) memcpy(&nptr->addr, addr, sizeof(struct in_addr));
-            else   memset(&nptr->addr, 0, sizeof(struct in_addr));
+         if (addr) memcpy(&nptr->addr, addr, sizeof(struct sockaddr_storage));
+            else   memset(&nptr->addr, 0, sizeof(struct sockaddr_storage));
          nptr->next = NULL;
          htab[hash(str)] = nptr;
       }
@@ -1005,8 +1005,8 @@
       /* not found... */
       if ( (nptr = new_dnode(str)) != NULL)
       {
-         if (addr) memcpy(&nptr->addr, addr, sizeof(struct in_addr));
-            else   memset(&nptr->addr, 0, sizeof(struct in_addr));
+         if (addr) memcpy(&nptr->addr, addr, sizeof(struct sockaddr_storage));
+            else   memset(&nptr->addr, 0, sizeof(struct sockaddr_storage));
          nptr->next  = htab[hash(str)];
          htab[hash(str)]=nptr;
       }
diff -Nur webalizer-2.01-10.orig/hashtab.h webalizer-2.01-10/hashtab.h
--- webalizer-2.01-10.orig/hashtab.h	Fri Sep 29 05:50:30 2000
+++ webalizer-2.01-10/hashtab.h	Sun May  5 14:38:12 2002
@@ -18,7 +18,7 @@
 
 #ifdef USE_DNS
 struct dnode {  char *string;              /* DNS node hash table struct   */
-              struct in_addr  addr;
+              struct sockaddr_storage  addr;
               struct dnode    *llist;
               struct dnode    *next; };
 #endif
@@ -87,7 +87,7 @@
 extern int    put_snode(char *, u_long, SNODEPTR *);
 
 #ifdef USE_DNS
-extern int    put_dnode(char *, struct in_addr *, DNODEPTR *);
+extern int    put_dnode(char *, struct sockaddr_storage *, DNODEPTR *);
 extern void   del_dlist(DNODEPTR *);
 #endif
 
diff -Nur webalizer-2.01-10.orig/parser.c webalizer-2.01-10/parser.c
--- webalizer-2.01-10.orig/parser.c	Fri Jun 15 10:34:24 2001
+++ webalizer-2.01-10/parser.c	Sun May  5 14:38:12 2002
@@ -114,7 +114,7 @@
    log_rec.ident[0]=0;
 */
 #ifdef USE_DNS
-   memset(&log_rec.addr,0,sizeof(struct in_addr));
+   memset(&log_rec.addr,0,sizeof(struct sockaddr_storage));
 #endif
 
    /* call appropriate handler */
diff -Nur webalizer-2.01-10.orig/webalizer.c webalizer-2.01-10/webalizer.c
--- webalizer-2.01-10.orig/webalizer.c	Wed Apr 17 00:11:31 2002
+++ webalizer-2.01-10/webalizer.c	Sun May  5 14:38:12 2002
@@ -63,6 +63,7 @@
 #ifdef USE_DNS
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#include <netdb.h>
 
 #ifdef HAVE_DB_185_H
 #include <db_185.h>
@@ -991,8 +992,15 @@
          /* Resolve IP address if needed */
          if (dns_db)
          {
-            if (inet_addr(log_rec.hostname) != INADDR_NONE)
-            resolve_dns(&log_rec);
+	   struct addrinfo hints, *ares;
+	   memset(&hints, 0, sizeof(hints));
+	   hints.ai_family = AF_UNSPEC;
+	   hints.ai_socktype = SOCK_STREAM;
+	   hints.ai_flags = AI_NUMERICHOST;
+	   if (0 == getaddrinfo(log_rec.hostname, "0", &hints, &ares)) {
+	     freeaddrinfo(ares);
+	     resolve_dns(&log_rec);
+	   }
          }
 #endif
 
diff -Nur webalizer-2.01-10.orig/webalizer.h webalizer-2.01-10/webalizer.h
--- webalizer-2.01-10.orig/webalizer.h	Sat Feb 10 01:58:18 2001
+++ webalizer-2.01-10/webalizer.h	Sun May  5 14:38:12 2002
@@ -143,7 +143,7 @@
                        int    resp_code;           /* response code        */
                        u_long xfer_size;           /* xfer size in bytes   */
 #ifdef USE_DNS
-                       struct in_addr addr;        /* IP address structure */
+		       struct sockaddr_storage addr; /* IP address structure */
 #endif  /* USE_DNS */
                        char   refer[MAXREF];       /* referrer             */
                        char   agent[MAXAGENT];     /* user agent (browser) */
